generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model Item {
  id          String   @id @default(auto()) @map("_id") @db.ObjectId
  address     String?
  createdDate DateTime @default(now())
  description String
  images      String[]
  videos      String[]
  links       String[]
  name        String   @unique
  tags        String[]
  openingHrs  String?
  closingHrs  String?
  telephone   String?
  website     String[]
  rating      Int?     @default(0)
  hasOwner    Boolean?
  ownerId     String?  @db.ObjectId
  reviews     Review[]
  createdBy   User?    @relation(fields: [createdById], references: [id])
  createdById String   @db.ObjectId
}

model Review {
  id             String   @id @default(auto()) @map("_id") @db.ObjectId
  body           String
  comments       String[]
  createdDate    DateTime @default(now())
  helpfulVotes   Int?     @default(0)
  rating         Int
  title          String
  unhelpfulVotes Int?     @default(0)
  item           Item?    @relation(fields: [itemId], references: [id])
  user           User?    @relation(fields: [userId], references: [id])
  itemId         String   @db.ObjectId
  userId         String   @db.ObjectId
  isVerified     Boolean?
  verifiedBy     String?
  isPublic       Boolean  @default(true)
  images         String[]
  videos         String[]
  links          String[]

  @@unique(fields: [title, userId, itemId], name: "unique_review", map: "unique_review")
}

model User {
  id          String   @id @default(auto()) @map("_id") @db.ObjectId
  userName    String   @unique
  avatar      String?
  createdDate DateTime @default(now())
  email       String   @unique
  firstName   String
  lastName    String
  profile     Profile?
  review      Review[]
  clerkUserId String
  item        Item[]
}

model Profile {
  id     String @id @default(auto()) @map("_id") @db.ObjectId
  bio    String
  userId String @unique @db.ObjectId
  user   User   @relation(fields: [userId], references: [id])
}

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "cockroachdb"
  url      = env("COCKROACH_DATABASE_URL")
}

model Product {
  id            String   @id @default(uuid())
  address       String?
  createdDate   DateTime @default(now())
  description   String
  display_image String
  images        String[]
  videos        String[]
  links         String[]
  name          String   @unique
  tags          String[]
  openingHrs    String?
  closingHrs    String?
  telephone     String?
  website       String[]
  rating        Int      @default(0)
  hasOwner      Boolean?
  ownerId       String?
  reviews       Review[]
  createdBy     User?    @relation(fields: [createdById], references: [id])
  createdById   String
  isDeleted     Boolean  @default(false)
}

model Comment {
  id             String   @id @default(uuid())
  body           String
  createdDate    DateTime @default(now())
  helpfulVotes   Int?     @default(0)
  unhelpfulVotes Int?     @default(0)
  review         Review   @relation(fields: [reviewId], references: [id])
  user           User     @relation(fields: [userId], references: [id])
  reviewId       String
  userId         String
  isDeleted      Boolean? @default(false)
}

model Review {
  id             String    @id @default(uuid())
  body           String
  createdDate    DateTime  @default(now())
  helpfulVotes   Int?      @default(0)
  rating         Int
  title          String
  unhelpfulVotes Int?      @default(0)
  product        Product?  @relation(fields: [productId], references: [id])
  user           User?     @relation(fields: [userId], references: [id])
  productId      String
  userId         String
  isVerified     Boolean?
  verifiedBy     String?
  isPublic       Boolean   @default(true)
  images         String[]
  videos         String[]
  links          String[]
  createdBy      String?
  isDeleted      Boolean?  @default(false)
  comments       Comment[]

  @@unique(fields: [title, userId, productId], name: "unique_review")
}

model User {
  id          String    @id @default(uuid())
  userName    String    @unique
  avatar      String?
  createdDate DateTime  @default(now())
  email       String    @unique
  firstName   String
  lastName    String
  reviews     Review[]
  clerkUserId String
  product     Product[]
  isDeleted   Boolean?  @default(false)
  comments    Comment[]
}
